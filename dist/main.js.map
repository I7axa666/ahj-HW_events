{"version":3,"file":"main.js","mappings":"mBAAe,SAASA,EAAgBC,EAAKC,GAC3C,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,CACvD,CCAe,MAAMK,EACnBC,WAAAA,CAAYC,GACVC,KAAKD,QAAUA,EACfC,KAAKC,gBAAkB,EACvBD,KAAKE,SAAW,CAElB,CAEAC,WAAAA,GACE,MAAMC,EAASb,EAAgB,EAAG,IACZS,KAAKD,QAAQM,cAAe,eAAcD,OAClDE,UAAUC,IAAI,gBAC9B,CAEAC,aAAAA,GACE,MAAMC,EAAWT,KAAKD,QAAQM,cAAc,kBAC5C,OAAiB,OAAbI,IAGJA,EAASH,UAAUI,OAAO,kBACnB,EACT,CAEAC,cAAAA,GACE,MAAMP,EAASb,EAAgB,EAAG,IAC5BqB,EAAiBZ,KAAKD,QAAQM,cAAe,eAAcD,OAC5DJ,KAAKQ,iBAIVI,EAAeN,UAAUC,IAAI,iBAC7BP,KAAKa,cAAa,IAJhBD,EAAeN,UAAUC,IAAI,gBAKjC,CAEAM,YAAAA,CAAaC,GACX,MAAMC,EAAsBC,SAASX,cAAc,SAC7CY,EAAkBD,SAASX,cAAc,SACnC,IAARS,EACFd,KAAKC,iBAAmB,EAExBD,KAAKE,UAAY,EAGnBa,EAAoBG,YAAclB,KAAKC,gBACvCgB,EAAgBC,YAAclB,KAAKE,SACN,IAAzBF,KAAKC,kBACPkB,MAAM,gBACNnB,KAAKC,gBAAkB,EACvBD,KAAKE,SAAW,EAEpB,ECpDa,MAAMkB,EACnBtB,WAAAA,CAAYC,GACVC,KAAKD,QAAUA,CACjB,CAEAsB,aAAAA,CAAcC,GACZtB,KAAKD,QAAQwB,iBAAiB,SAAUC,IAClCA,EAAMC,OAAOnB,UAAUoB,SAAS,mBAClCJ,EAAWT,cAAa,GACxBS,EAAWd,gBACb,GAEJ,ECTFQ,SAASO,iBAAiB,oBAAoB,KAC5C,MAAMI,EAAiB,IAAI9B,EAAemB,SAASX,cAAc,WACjEsB,EAAexB,cACfyB,aAAY,KACVD,EAAehB,gBAAgB,GAC9B,KAEU,IAAIS,EAAKJ,SAASX,cAAc,WACxCgB,cAAcM,EAAe,G","sources":["webpack://HW_events/./src/js/getRandomNumb.js","webpack://HW_events/./src/js/goblinPosition.js","webpack://HW_events/./src/js/beatCounter.js","webpack://HW_events/./src/js/app.js"],"sourcesContent":["export default function getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import getRandomNumber from './getRandomNumb';\n\nexport default class GoblinPosition {\n  constructor(element) {\n    this.element = element;\n    this.lostGoblinsCoun = 0;\n    this.hitCount = 0;\n    // this.countGoblins = this.countGoblins.bind(this);\n  }\n\n  setPosition() {\n    const number = getRandomNumber(1, 16);\n    const ferstPosition = this.element.querySelector(`[data-cell=\"${number}\"]`);\n    ferstPosition.classList.add('whith_gobline');\n  }\n\n  cleanPosition() {\n    const position = this.element.querySelector('.whith_gobline');\n    if (position === null) {\n      return false;\n    }\n    position.classList.remove('whith_gobline');\n    return true;\n  }\n\n  changePosition() {\n    const number = getRandomNumber(1, 16);\n    const randomPosition = this.element.querySelector(`[data-cell=\"${number}\"]`);\n    if (!this.cleanPosition()) {\n      randomPosition.classList.add('whith_gobline');\n      return;\n    }\n    randomPosition.classList.add('whith_gobline');\n    this.countGoblins(false);\n  }\n\n  countGoblins(hit) {\n    const goblinsCountElement = document.querySelector('.lost');\n    const hitCountElement = document.querySelector('.hit');\n    if (hit === false) {\n      this.lostGoblinsCoun += 1;\n    } else {\n      this.hitCount += 1;\n    }\n\n    goblinsCountElement.textContent = this.lostGoblinsCoun;\n    hitCountElement.textContent = this.hitCount;\n    if (this.lostGoblinsCoun === 6) {\n      alert('Вы проиграли');\n      this.lostGoblinsCoun = 0;\n      this.hitCount = 0;\n    }\n  }\n}\n","export default class Beat {\n  constructor(element) {\n    this.element = element;\n  }\n\n  registerBeats(someGoblin) {\n    this.element.addEventListener('click', (event) => {\n      if (event.target.classList.contains('whith_gobline')) {\n        someGoblin.countGoblins(true);\n        someGoblin.cleanPosition();\n      }\n    });\n  }\n}\n","import GoblinPosition from './goblinPosition';\nimport Beat from './beatCounter';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const goblinPosition = new GoblinPosition(document.querySelector('.table'));\n  goblinPosition.setPosition();\n  setInterval(() => {\n    goblinPosition.changePosition();\n  }, 1000);\n\n  const beat = new Beat(document.querySelector('.table'));\n  beat.registerBeats(goblinPosition);\n});\n"],"names":["getRandomNumber","min","max","Math","floor","random","GoblinPosition","constructor","element","this","lostGoblinsCoun","hitCount","setPosition","number","querySelector","classList","add","cleanPosition","position","remove","changePosition","randomPosition","countGoblins","hit","goblinsCountElement","document","hitCountElement","textContent","alert","Beat","registerBeats","someGoblin","addEventListener","event","target","contains","goblinPosition","setInterval"],"sourceRoot":""}